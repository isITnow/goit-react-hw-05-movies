{"version":3,"file":"static/js/908.4fbc0d3e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Container/container.module.css?0cd8","components/Container/Container.jsx","webpack://react-homework-template/./src/components/MovieInfo/movieInfo.module.css?d0c0","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_container__yWowe\"};","// import PropTypes from 'prop-types';\n\nimport s from '../Container/container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n\n// Container.propTypes = {};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"movieInfo_card__yfx-2\",\"info\":\"movieInfo_info__iGgAB\",\"btn\":\"movieInfo_btn__OPtvE\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from '../MovieInfo/movieInfo.module.css';\n\nconst MovieInfo = ({ film }) => {\n  const location = useLocation();\n\n  const { title, genres, overview, poster_path, vote_average, release_date } =\n    film;\n\n  const filmTitle = `${title} (${release_date.slice(0, 4)})`;\n  const userScore = Math.floor(vote_average * 10);\n  const imgPath = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const pathBack = location.state?.from || `/`;\n\n  return (\n    <>\n      <Link to={pathBack} className={s.btn}>\n        &#8592; Go back\n      </Link>\n      <div className={s.card}>\n        <img width=\"300\" src={imgPath} alt={title} />\n        <div className={s.info}>\n          <h2>{filmTitle}</h2>\n          <p>{`User Score: ${userScore}%`}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres.length > 0\n              ? genres.map(item => item.name).join(', ')\n              : 'no info'}\n          </p>\n        </div>\n      </div>\n\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link\n              to=\"cast\"\n              state={location.state?.from ? location.state : null}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"reviews\"\n              state={location.state?.from ? location.state : null}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default MovieInfo;\n\nMovieInfo.propTypes = {\n  film: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    release_date: PropTypes.string.isRequired,\n    // genres: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n","import { Outlet, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { API } from 'services/api';\n\nimport MovieInfo from 'components/MovieInfo';\nimport Container from 'components/Container';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState({});\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    API.fetchFilmByID(movieId)\n      .then(({ data }) => {\n        setFilm(data);\n        setStatus('success');\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  return (\n    <main>\n      <Container>\n        {status === 'success' && <MovieInfo film={film} />}\n        <Outlet />\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst API_KEY = 'd70849b39c7b399ded2dffef6ee1baa4';\n\n// const filmApi = axios.create({\n//   baseURL: `https://api.themoviedb.org/3`,\n//   params: {\n//     key: '29319280-d70849b39c7b399ded2dffef6ee1baa4',\n//   },\n// });\n\n////// TRENDING //////\n\nconst fetchFilmTrending = async () => {\n  //   const params = {\n  //     media_type: 'movie',\n  //     time_window: 'day',\n  //   };\n\n  //   const response = filmApi.get('/', { params });\n\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response;\n};\n\n////// QUERY //////\n\nconst fetchFilmByQuery = async (query, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?&language=en-U&include_adult=true&api_key=${API_KEY}&page=${page}&query=${query}`\n  );\n\n  return response;\n};\n\n////// ID //////\n\nconst fetchFilmByID = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\n////// CAST //////\n\nconst fetchFilmCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\n////// REVIEWS //////\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response;\n};\n\nexport const API = {\n  fetchFilmReviews,\n  fetchFilmCast,\n  fetchFilmByID,\n  fetchFilmByQuery,\n  fetchFilmTrending,\n};\n"],"names":["children","className","s","film","location","useLocation","title","genres","overview","poster_path","vote_average","release_date","filmTitle","slice","userScore","Math","floor","imgPath","pathBack","state","from","to","width","src","alt","length","map","item","name","join","movieId","useParams","useState","setFilm","status","setStatus","useEffect","API","then","data","catch","error","console","log","message","Container","BASE_URL","API_KEY","fetchFilmTrending","axios","response","fetchFilmByQuery","query","page","fetchFilmByID","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}